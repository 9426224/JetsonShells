Sending build context to Docker daemon  17.07MB
Step 1/32 : ARG BASE_IMAGE=nvcr.io/nvidia/l4t-base:r32.4.3
Step 2/32 : FROM ${BASE_IMAGE}
 ---> c93fc89026d9
Step 3/32 : LABEL maintainer="9426224"     version="0.1"     description="A l4t-base dockerfile for ROS2 User"     email="9426224@live.com"
 ---> Using cache
 ---> 527469b77af4
Step 4/32 : ENV DEBIAN_FRONTEND=noninteractive
 ---> Using cache
 ---> 75e57f9db35b
Step 5/32 : ENV SHELL /bin/bash
 ---> Using cache
 ---> 08858c301704
Step 6/32 : SHELL ["/bin/bash", "-c"]
 ---> Using cache
 ---> 2ca9ea6e5cc9
Step 7/32 : WORKDIR /tmp
 ---> Using cache
 ---> 8ee6f00d9e88
Step 8/32 : RUN locale-gen en_US en_US.UTF-8 && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
 ---> Using cache
 ---> 666daecebb26
Step 9/32 : ENV LANG=en_US.UTF-8
 ---> Using cache
 ---> bd63880483ef
Step 10/32 : ENV PYTHONIOENCODING=utf-8
 ---> Using cache
 ---> e75aea031624
Step 11/32 : RUN apt-get update &&     apt-get install -y --no-install-recommends         curl         wget         gnupg2         lsb-release         ca-certificates &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean &&     rm -rf /tmp/*
 ---> Using cache
 ---> 6fdb8d8b2c02
Step 12/32 : RUN apt-get update &&     apt-get install -y --no-install-recommends         build-essential         git         apt-utils         usbutils         iputils-ping         gdb         libtool         autoconf         automake &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean &&     rm -rf /tmp/*
 ---> Using cache
 ---> a8b645fa8831
Step 13/32 : RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg &&     echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null
 ---> Using cache
 ---> 7828ddf8e7ba
Step 14/32 : RUN wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate          https://github.com/Kitware/CMake/releases/download/v3.20.5/cmake-3.20.5-linux-aarch64.tar.gz &&    tar -zxvf ./cmake-3.20.5-linux-aarch64.tar.gz -C /usr/local/share/ &&     ln -s /usr/local/share/cmake-3.20.5-linux-aarch64/bin/cmake /usr/bin/cmake &&     ln -s /usr/local/share/cmake-3.20.5-linux-aarch64/bin/cmake /usr/local/bin/cmake &&     rm -rf /tmp/*
 ---> Using cache
 ---> 39fe00fac62b
Step 15/32 : RUN apt-get purge -y '*opencv*' || echo "previous OpenCV installation not found" &&     mkdir opencv &&     cd opencv &&     wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate https://nvidia.box.com/shared/static/5v89u6g5rb62fpz4lh0rz531ajo2t5ef.gz -O OpenCV-4.5.0-aarch64.tar.gz &&     tar -xzvf OpenCV-4.5.0-aarch64.tar.gz &&     dpkg -i --force-depends *.deb &&     apt-get update &&     apt-get install -y -f --no-install-recommends &&     dpkg -i *.deb &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean &&     rm -rf /tmp/* &&     cp -r /usr/include/opencv4 /usr/local/include/opencv4 &&     cp -r /usr/lib/python3.6/dist-packages/cv2 /usr/local/lib/python3.6/dist-packages/cv2
 ---> Using cache
 ---> b997392b3c29
Step 16/32 : RUN git clone --branch yaml-cpp-0.7.0 https://github.com/jbeder/yaml-cpp yaml-cpp-0.7 &&     cd yaml-cpp-0.7 &&     mkdir build &&     cd build &&     cmake -DBUILD_SHARED_LIBS=ON .. &&     make -j$(nproc) &&     make -j$(nproc) install &&     git clone --branch 1.9.5 https://github.com/open-source-parsers/jsoncpp.git &&     cd jsoncpp &&     mkdir build &&     cd build &&     cmake .. &&     make -j$(nproc) &&     make -j$(nproc) install &&     rm -rf /tmp/*
 ---> Using cache
 ---> 41ad2b86cf65
Step 17/32 : RUN apt-get update &&     apt-get install -y --no-install-recommends         libpython3-dev         python3-colcon-common-extensions         python3-pip         python3-numpy         python3-rosdep         python3-setuptools         python3-vcstool         python3-rosinstall-generator         libtinyxml2-dev &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean &&     rm -rf /tmp/*
 ---> Using cache
 ---> a041ec22c2cc
Step 18/32 : RUN apt-get update &&     apt-get install -y --no-install-recommends         libeigen3-dev         libconsole-bridge-dev         libzstd-dev         python3-autobahn         python3-tornado         python3-twisted         libogg-dev         libtheora-dev         pydocstyle         libspdlog-dev         python3-lark-parser         libboost-dev         libboost-python-dev         libboost-python1.65.1         libcppunit-dev         libsqlite3-dev         python3-lxml         libtinyxml-dev         libbenchmark-dev         ffmpeg         libavcodec-dev         libavformat-dev         libavutil-dev         libswscale-dev         uncrustify         cppcheck         acl         libacl1-dev         python3-flake8         libbullet-dev         python3-websocket         libssl-dev         libboost-all-dev         libgtest-dev         python3-bson         libasio-dev         python3-ifcfg         python3-pytest-mock         python3-mypy         libxml2-utils         python3-mock         libcunit1-dev         bison         libyaml-dev         graphviz         rti-connext-dds-5.3.1         python3-netifaces         python3-packaging         google-mock &&     pip3 install --upgrade pip &&     python3 -m pip install --no-cache-dir -U         importlib-resources         importlib-metadata &&     rm -rf ~/.cache/pip &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean &&     rm -rf /tmp/*
 ---> Using cache
 ---> 608642b9c54e
Step 19/32 : RUN mkdir -p /opt/ros/galactic/src &&     cd /opt/ros/galactic &&     rosinstall_generator --deps --rosdistro galactic ros_base         launch_xml         launch_yaml         launch_testing         launch_testing_ament_cmake         example_interfaces         cv_bridge         v4l2_camera         vision_opencv         vision_msgs         image_transport         compressed_image_transport         compressed_depth_image_transport         image_transport_plugins         rosbridge_suite         async_web_server_cpp     > ros2.galactic.ros_base.rosinstall &&     cat ros2.galactic.ros_base.rosinstall &&     vcs import src < ros2.galactic.ros_base.rosinstall &&     cd /opt/ros/galactic/src && git clone --branch ros2 https://github.com/RobotWebTools/web_video_server.git &&     cd web_video_server && sed -i '3i set(CUDA_TOOLKIT_ROOT_DIR /usr/local/cuda)' ./CMakeLists.txt &&     cd /opt/ros/galactic/src/async_web_server_cpp && sed -i 's/@Boost_VERSION@/1.65/g' ./find_dependencies.cmake.in &&     cd /opt/ros/galactic &&     apt-get update &&     rosdep init &&     rosdep update &&     rosdep install -y         --ignore-src         --from-paths src         --rosdistro galactic         --skip-keys "libopencv-dev libopencv-contrib-dev libopencv-imgproc-dev python-opencv python3-opencv" &&     colcon build --merge-install &&     rm -rf /opt/ros/galactic/src &&     rm -rf /opt/ros/galactic/log &&     rm -rf /opt/ros/galactic/build &&     rm /opt/ros/galactic/*.rosinstall &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean &&     rm -rf /tmp/*
 ---> Using cache
 ---> 30eb71abd3ce
Step 20/32 : ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
 ---> Using cache
 ---> f7db1c63b803
Step 21/32 : RUN wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate         https://nodejs.org/dist/v14.17.5/node-v14.17.5-linux-arm64.tar.xz &&     tar -xvf node-v14.17.5-linux-arm64.tar.xz &&     mv node-v14.17.5-linux-arm64 /opt/node &&     ln -s /opt/node/bin/node /usr/local/bin/node &&     ln -s /opt/node/bin/npm /usr/local/bin/npm &&     npm install -g pm2 &&     ln -s /opt/node/bin/pm2 /usr/local/bin/ &&     rm -rf /tmp/*
 ---> Using cache
 ---> 62ce995744b6
Step 22/32 : RUN wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate         https://nvidia.box.com/shared/static/cs3xn3td6sfgtene6jdvsxlr366m2dhq.whl -O torch-1.7.0-cp36-cp36m-linux_aarch64.whl &&     pip3 install --no-cache-dir torch-1.7.0-cp36-cp36m-linux_aarch64.whl &&     rm -rf ~/.cache/pip &&     rm -rf /tmp/*
 ---> Using cache
 ---> 3c867919b948
Step 23/32 : RUN apt-get update &&     apt-get install -y --no-install-recommends         build-essential         git         openssh-server         vim         apt-utils         unzip         tmux         python3-matplotlib         python3-numba         libcurl4-openssl-dev         python3-llvmlite         libgstreamer1.0-dev         libgstreamer-plugins-base1.0-dev         libssl1.0.0         libgstreamer1.0-0         gstreamer1.0-tools         gstreamer1.0-plugins-good         gstreamer1.0-plugins-bad         gstreamer1.0-plugins-ugly         gstreamer1.0-libav         libgstrtspserver-1.0-0         libjansson4         libx11-dev         x11-apps         xorg         meson         libfreetype6-dev         tcl-dev         tk-dev         python3-tk         protobuf-compiler         libprotoc-dev &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean &&     rm -rf /tmp/*
 ---> Using cache
 ---> 786afaec8b56
Step 24/32 : RUN pip3 install --upgrade pip &&     python3 -m pip install --no-cache-dir -U         wheel         setuptools         numpy==1.19.3 &&     python3 -m pip install --no-cache-dir -U         argcomplete         pyzmq         filterpy==1.4.5         scikit-learn==0.24.2         scikit-image==0.17.2         scipy==1.5.4         pandas         pillow         flake8-blind-except         flake8-builtins         flake8-class-newline         flake8-comprehensions         flake8-deprecated         flake8-docstrings         flake8-import-order         flake8-quotes         pytest-repeat         pytest-rerunfailures         pytest         pycuda==2019.1.2         onnx==1.4.1 &&     rm -rf /tmp/* &&     rm -rf ~/.cache/pip
 ---> Using cache
 ---> b54a93b9b052
Step 25/32 : RUN ln -s /usr/local/cuda-10.2/targets/aarch64-linux/lib/libcudart.so.10.2 /usr/lib/aarch64-linux-gnu/ &&     ln -s /usr/local/cuda-10.2/targets/aarch64-linux/lib/libnvrtc.so.10.2 /usr/lib/aarch64-linux-gnu/ &&     ln -s /usr/local/cuda-10.2/targets/aarch64-linux/lib/libnvrtc-builtins.so.10.2 /usr/lib/aarch64-linux-gnu/ &&     ln -s /usr/local/cuda-10.2/targets/aarch64-linux/lib/libcurand.so.10 /usr/lib/aarch64-linux-gnu/ &&     ln -s /usr/local/cuda-10.2/targets/aarch64-linux/lib/libcufft.so.10 /usr/lib/aarch64-linux-gnu/ &&     ln -s /usr/local/cuda-10.2/targets/aarch64-linux/lib/libcufftw.so.10 /usr/lib/aarch64-linux-gnu/ &&     ln -s /usr/local/cuda-10.2/targets/aarch64-linux/lib/libcuing64.so.10.2 /usr/lib/aarch64-linux-gnu/ &&     ln -s /usr/local/cuda-10.2/targets/aarch64-linux/lib/libcupti.so.10.2 /usr/lib/aarch64-linux-gnu/ &&     ln -s /usr/local/cuda-10.2/targets/aarch64-linux/lib/libcusolver.so.10 /usr/lib/aarch64-linux-gnu/ &&     ln -s /usr/local/cuda-10.2/targets/aarch64-linux/lib/libcusparse.so.10 /usr/lib/aarch64-linux-gnu/ &&     ln -s /usr/local/cuda-10.2/targets/aarch64-linux/lib/libnvperf_host.so /usr/lib/aarch64-linux-gnu/ &&     ln -s /usr/local/cuda-10.2/targets/aarch64-linux/lib/libnvgraph.so.10 /usr/lib/aarch64-linux-gnu/ &&     ln -s /usr/local/cuda-10.2/targets/aarch64-linux/lib/libnvperf_target.so /usr/lib/aarch64-linux-gnu/ &&     ln -s /usr/local/cuda-10.2/targets/aarch64-linux/lib/libnvToolsExt.so /usr/lib/aarch64-linux-gnu/ &&     ln -s $(which nvcc) /sbin/nvcc
 ---> Using cache
 ---> 79a72c5ddd3d
Step 26/32 : RUN wget  --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate     https://github.com/cdr/code-server/releases/download/v3.11.1/code-server-3.11.1-linux-arm64.tar.gz &&     tar -zxvf code-server-3.11.1-linux-arm64.tar.gz &&     mv code-server-3.11.1-linux-arm64 ~/code-server &&     rm -rf /tmp/*
 ---> Using cache
 ---> f981ee21ef64
Step 27/32 : RUN echo $'#!/bin/bash\n source /opt/ros/galactic/install/setup.bash\n mkdir -p ~/ros2_ws/src\n cd ~/ros2_ws/src\n git clone --branch master https://sw9426224:f86815ba0c0befb27143581b592c1955@gitee.com/bitcq/bitcq_msg.git\n git clone --branch ros_foxy https://sw9426224:f86815ba0c0befb27143581b592c1955@gitee.com/bitcq/radar.git\n git clone --branch master https://sw9426224:f86815ba0c0befb27143581b592c1955@gitee.com/bitcq/tiandy_camera.git\n git clone --branch ros_foxy https://sw9426224:f86815ba0c0befb27143581b592c1955@gitee.com/bitcq/sort_track.git\n git clone --branch ros2_foxy https://sw9426224:f86815ba0c0befb27143581b592c1955@gitee.com/bitcq/traffic_count.git\n git clone --branch ros_foxy https://sw9426224:f86815ba0c0befb27143581b592c1955@gitee.com/bitcq/yolov4_trt.git\n git clone --branch master https://sw9426224:f86815ba0c0befb27143581b592c1955@gitee.com/bitcq/camera_radar_publisher.git\n git clone --branch master https://sw9426224:f86815ba0c0befb27143581b592c1955@gitee.com/bitcq/bitcq_camera.git\n git clone --branch master https://sw9426224:f86815ba0c0befb27143581b592c1955@gitee.com/bitcq/demo_view.git\n git clone --branch foxy https://sw9426224:f86815ba0c0befb27143581b592c1955@gitee.com/bitcq/sensor_fusion.git\n cd ~/ros2_ws\n colcon build --packages-select bitcq_msg\n source install/setup.bash\n colcon build\n cd ~/\n git clone --branch master https://sw9426224:f86815ba0c0befb27143581b592c1955@gitee.com/bitcq/ecu_web.git\n cd ecu_web\n chmod +x build.sh\n sudo ./build.sh\n mv ecuNodeServer /home\n rm -rf ~/ecu_web\n cd /home/ecuNodeServer\n chmod +x /home/ecuNodeServer/server/start.sh\n rm -f ~/pull_all_repo.sh\n source /root/ros2_ws/install/setup.bash\n /home/ecuNodeServer/server/start.sh' > /root/pull_all_repo.sh &&     chmod +x /root/pull_all_repo.sh
 ---> Running in f20c6fb3b528
Removing intermediate container f20c6fb3b528
 ---> e754bb63dda8
Step 28/32 : RUN echo $'#!/bin/bash\n     set -e\n     echo "root:$rootpwd" | chpasswd\n     /etc/init.d/ssh start\n     export PASSWORD=$cspwd\n     echo port=${sshport} >> /etc/ssh/sshd_config\n     /etc/init.d/ssh restart\n     nohup /root/code-server/code-server --port $csport --auth password --host 0.0.0.0 >& /root/code-server/run.log &\n     echo -e export\tDISPLAY=$DISPLAY >> /root/.bashrc\n     exec "$@"' > /ros_entrypoint.sh &&     chmod +x /ros_entrypoint.sh &&     echo $'export XAUTHORITY=/tmp/.XAuthority\nsource /opt/ros/galactic/install/setup.bash\nsource ~/ros2_ws/install/setup.bash' >> /root/.bashrc &&     echo $'PermitRootLogin yes\nPubkeyAuthentication yes\nAllowTcpForwarding yes\nX11DisplayOffset 10\nX11UseLocalhost yes' >> /etc/ssh/sshd_config
 ---> Running in f4aad5e205d2
Removing intermediate container f4aad5e205d2
 ---> 664d043df476
Step 29/32 : RUN mkdir -p ~/ros2_ws/src
 ---> Running in 941d44b3779c
Removing intermediate container 941d44b3779c
 ---> c4d1826b0a9a
Step 30/32 : ENTRYPOINT ["/ros_entrypoint.sh"]
 ---> Running in 069a3947b17b
Removing intermediate container 069a3947b17b
 ---> a538cde4c2fa
Step 31/32 : CMD ["bash"]
 ---> Running in fb0aef9f5f81
Removing intermediate container fb0aef9f5f81
 ---> f2e785722ac6
Step 32/32 : WORKDIR /root/
 ---> Running in a4355a4c9aec
Removing intermediate container a4355a4c9aec
 ---> d63bf94402f0
Successfully built d63bf94402f0
Successfully tagged 9426224/ros-galactic-develop:latest
